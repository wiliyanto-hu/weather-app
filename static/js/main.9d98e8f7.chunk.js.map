{"version":3,"sources":["hooks/localStorageState.jsx","context/weatherContext.jsx","WeatherHeader.jsx","WeatherDetail.jsx","WeatherDetailContainer.jsx","Weather.jsx","hooks/toggleState.jsx","hooks/inputState.jsx","Modals.jsx","App.js","index.js"],"names":["LocalStorageState","key","initialValue","useState","val","JSON","parse","localStorage","getItem","String","state","setState","useEffect","setItem","stringify","WeatherContext","createContext","WeatherProvider","props","city","setCity","details","setDetails","a","cityName","weather","axios","get","res","data","name","main","sys","wind","countryID","country","icon","temperature","temp","toFixed","description","humidity","windSpeed","speed","maxTemp","temp_max","minTemp","temp_min","response","message","request","console","log","getWeather","Provider","value","changeCity","children","WeatherHeader","useContext","Grid","container","justify","item","lg","md","sm","xs","Paper","style","textAlign","padding","marginTop","elevation","display","alignItems","src","alt","fontSize","marginLeft","fontWeight","textTransform","fontFamily","WeatherDetails","detail","iconClass","detailText","iconColor","className","color","WeatherDetailContainer","WeatherDetail","Weather","boxShadow","ToggleState","init","toggle","InputState","e","target","FormDialog","toggleState","isOpen","toggleOpen","inputState","text","handleChange","Button","variant","onClick","Dialog","open","onClose","aria-labelledby","DialogTitle","id","onSubmit","preventDefault","instantValidate","DialogContent","autoFocus","margin","label","type","fullWidth","onChange","validators","errorMessages","DialogActions","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d98e8f7.chunk.js","sourcesContent":["import {useState, useEffect} from 'react'\r\n\r\nfunction LocalStorageState(key, initialValue) {\r\n    const[state, setState] = useState(()=> {\r\n        let val\r\n        try{\r\n            val = JSON.parse(localStorage.getItem(key)) || String(initialValue)\r\n        }\r\n        catch{\r\n            val= initialValue\r\n        }\r\n        return val;\r\n\r\n    \r\n    })\r\n    useEffect(()=> {\r\n        localStorage.setItem(key, JSON.stringify(state))\r\n    },[state])\r\n\r\n    return [state,setState]\r\n}\r\nexport default LocalStorageState","import React, {createContext, useState, useEffect} from 'react'\r\nimport LocalStorageState from '../hooks/localStorageState'\r\nimport axios from 'axios'\r\n\r\nconst key='92a4d62a3c83965a7d90cc295ef0d3af'\r\n\r\nexport const WeatherContext = createContext();\r\n\r\nexport function WeatherProvider (props){\r\nconst [city,setCity] = LocalStorageState('city',\"jakarta\")\r\n  const [details,setDetails] = useState({})\r\n\r\nconst changeCity = (city='pekanbaru') => {\r\n    setCity(city)\r\n}  \r\n useEffect(() => {\r\n    async function getWeather (){\r\n      try {\r\n        setDetails({\r\n          cityName:'Loading Data',\r\n          weather: 'Please Wait'\r\n        })\r\n        const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${key}`)\r\n        const {data} = res\r\n        const {name, main, weather,sys, wind} = data\r\n        setDetails({\r\n          cityName:name,\r\n          countryID: sys.country,\r\n          icon: weather[0].icon,\r\n          temperature:(main.temp - 273.15).toFixed(2),\r\n          weather:weather[0].description,\r\n          humidity:main.humidity,\r\n          windSpeed:wind.speed,\r\n          maxTemp:(main.temp_max - 273.15).toFixed(2),\r\n          minTemp:(main.temp_min - 273.15).toFixed(2),\r\n        })\r\n      }\r\n        catch (error){\r\n          if (error.response) {\r\n            const {message} = error.response.data\r\n            setDetails({\r\n              cityName:message,\r\n              weather:\"Please select another city\",\r\n              countryID: 'X',\r\n              icon: 'X',\r\n              temperature:'X',\r\n              \r\n              humidity:'X',\r\n              windSpeed:'X',\r\n              maxTemp:'X',\r\n              minTemp:'X',\r\n            })\r\n        }\r\n        else if (error.request) {\r\n          setDetails({\r\n            cityName:\"Connection error occurred\",\r\n            weather:\"Please check your internet connection\",\r\n            countryID: 'X',\r\n            icon: 'X',\r\n            temperature:'X',\r\n            \r\n            humidity:'X',\r\n            windSpeed:'X',\r\n            maxTemp:'X',\r\n            minTemp:'X',\r\n          })\r\n          console.log(error.request, \"11111111\");\r\n        } else {\r\n          // Something happened in setting up the request that triggered an Error\r\n          console.log('Error', error.message, \"222222\");\r\n        } \r\n        console.log('this is the ERROR',error);\r\n        }\r\n    }\r\n    getWeather()\r\n }, [city]) \r\n  \r\nreturn(\r\n    <WeatherContext.Provider value={{...details, changeCity}}>\r\n        {props.children}\r\n    </WeatherContext.Provider>\r\n    )\r\n\r\n}","import React, {useContext} from 'react'\r\nimport {Grid, Paper} from \"@material-ui/core\"\r\nimport {WeatherContext} from './context/weatherContext.jsx'\r\nconst WeatherHeader = () => {\r\n  const {cityName,countryID,icon,weather,temperature} = useContext(WeatherContext)\r\n  \r\n  return(\r\n    <Grid container justify='center'    >\r\n       <Grid item lg={10} md={10} sm={10} xs={10}>\r\n         <Paper style={{textAlign: 'left', padding:'0.8rem', marginTop:'1rem'}} elevation={3} >\r\n           <div style={{display:'flex', alignItems:\"center\"}}>\r\n             <img src={`http://openweathermap.org/img/wn/${icon}@2x.png` } alt='weather_icon' /><span style={{fontSize: '1.3rem', marginLeft:'1.3rem'}}>{`${temperature}°C`}</span>\r\n             </div>\r\n            <h1 style={{fontWeight: '800'}}>{cityName}, {countryID}</h1>\r\n            <h3 style={{textTransform:'capitalize', fontFamily: 'Nunito, sans-serif'}}>{weather}</h3>\r\n         </Paper>\r\n       </Grid>\r\n       </Grid>    ) \r\n}\r\n\r\nexport default WeatherHeader;","import React from 'react'\r\nimport {Grid, Paper} from \"@material-ui/core\"\r\n\r\n\r\nconst WeatherDetails = ({detail,iconClass,detailText,iconColor}) => {\r\n\r\n  return(\r\n       <Grid item lg={2} xs={5} justify='center' elevation={2} >\r\n         <Paper style={{textAlign: 'center'}} >\r\n           <p style={{fontFamily: 'Nunito, sans-serif'}}>{detailText}</p>\r\n            <i className={iconClass} style={{color:iconColor }}></i>\r\n            <p style={{fontFamily: 'Nunito, sans-serif'}}>{detail}</p>\r\n         </Paper>\r\n       </Grid>   )     \r\n}\r\n\r\nexport default WeatherDetails;","import React, {useContext} from 'react'\r\nimport {WeatherContext} from './context/weatherContext.jsx'\r\nimport {Grid} from \"@material-ui/core\"\r\nimport WeatherDetail from './WeatherDetail.jsx'\r\n\r\n\r\n\r\nconst WeatherDetailContainer = () => {\r\nconst {humidity,windSpeed,maxTemp,minTemp} = useContext(WeatherContext)\r\n    return(\r\n    <Grid container justify='space-around'    >\r\n       <WeatherDetail detail={humidity} iconClass='fas fa-tint fa-2x' detailText=\"Humidity(%)\" iconColor='CornflowerBlue'/>\r\n       <WeatherDetail detail={windSpeed} iconClass=\"fas fa-wind fa-2x\" detailText=\"Wind(m/s)\" iconColor='gray'/>\r\n       <WeatherDetail detail={maxTemp} iconClass=\"fas fa-arrow-up fa-2x\" detailText=\"Max Temp(°C)\" iconColor='orange'/>\r\n       <WeatherDetail detail={minTemp} iconClass=\"fas fa-arrow-down fa-2x\" detailText=\"Min Temp(°C)\" iconColor='aqua'/>\r\n       </Grid>     )\r\n}\r\n\r\nexport default WeatherDetailContainer;","import React from \"react\";\r\nimport { Paper,Grid} from \"@material-ui/core\";\r\nimport WeatherHeader from './WeatherHeader.jsx'\r\nimport WeatherDetailContainer from './WeatherDetailContainer.jsx'\r\nconst Weather = () => {\r\n  return(\r\n  <Grid container justify='center' >\r\n    <Grid item lg={6} md={6} sm={8} xs={11}style={{marginTop : '5%'}} >\r\n      <Paper elevation={3} style={{boxShadow: '0px 13px 24px 1px rgba(255,255,255,0.25)'}}>\r\n        <WeatherHeader/>\r\n        \r\n      <WeatherDetailContainer/>\r\n      </Paper>\r\n    </Grid>\r\n  </Grid>)\r\n  \r\n};\r\n\r\nexport default Weather;\r\n","import {useState} from 'react';\r\n\r\nfunction ToggleState (init=false){\r\n    const [state,setState] = useState(init)\r\n\r\n    const toggle = () => setState(!state)\r\n\r\n    return[state,toggle]\r\n}\r\n\r\nexport default ToggleState;","import {useState} from 'react';\r\n\r\nfunction InputState (){\r\n    const [state,setState] = useState('')\r\n\r\n    const handleChange = (e) => setState(e.target.value)\r\n\r\n    return[state,handleChange]\r\n}\r\n\r\nexport default InputState;","import React,{useContext, useEffect} from 'react';\r\nimport {WeatherContext} from './context/weatherContext.jsx'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport toggleState from './hooks/toggleState.jsx'\r\nimport inputState from './hooks/inputState.jsx'\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\n\r\nexport default function FormDialog() {\r\n    const {changeCity} = useContext(WeatherContext)\r\n  const [isOpen, toggleOpen] = toggleState(false)\r\n  const [text, handleChange] = inputState('')\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={toggleOpen} style={{marginTop: '2rem'}}>\r\n        Change Location\r\n      </Button>\r\n      <Dialog open={isOpen} onClose={toggleOpen} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Enter a City Name</DialogTitle>\r\n        <ValidatorForm onSubmit={(e)=> {\r\n            e.preventDefault()\r\n            changeCity(text);\r\n            toggleOpen();\r\n        }} instantValidate={false} >\r\n        <DialogContent>\r\n          \r\n          <TextValidator\r\n          value={text}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"City\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n            validators={['required']}\r\n            errorMessages={['This field is required']}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleOpen} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n           color=\"primary\" type='submit'>\r\n            Change\r\n          </Button>\r\n         \r\n        </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import \"./App.css\";\nimport Weather from \"./Weather.jsx\";\nimport { WeatherProvider } from \"./context/weatherContext.jsx\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport Modals from \"./Modals.jsx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WeatherProvider>\n        <Weather />\n        <Modals />\n      </WeatherProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}